<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:oauth2="http://www.mulesoft.org/schema/mule/oauth2"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/oauth2 http://www.mulesoft.org/schema/mule/oauth2/current/mule-oauth2.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
       http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">

    <oauth2:authorization-code-config name="oauthConfig"
                                clientId="${client.id}"
                                clientSecret="${client.secret}"
                                redirectionUrl="${redirect.url}">
        <oauth2:custom-token-request
                tokenUrlCallFlow="oauthTokenAcquicitionFlow"
                refreshTokenFlow="oauthRefreshTokenFlowOAuthConfig"/>
    </oauth2:authorization-code-config>

    <flow name="oauthTokenAcquicitionFlow">
        <logger/>
    </flow>

    <flow name="oauthRefreshTokenFlowOAuthConfig">
        <expression-component>
            payload = ['client_id' : '${client.id}', 'client_secret' : '${client.secret}', 'grant_type' :
            'refresh_token', 'redirect_uri' : '${redirect.url}', 'refresh_token' :
            oauthState('oauthConfig').refreshToken]
        </expression-component>
        <http:request host="${token.host}" port="${token.port}" path="${token.path}" method="POST"/>
        <json:json-to-object-transformer returnClass="java.lang.Object"/>
        <oauth2:store-authorization-code-state config="oauthConfig"
                                                accessToken="#[payload['access_token']]"
                                                refreshToken="#[payload['refresh_token']]"
                                                expiresIn="#[payload['expires_in']]"/>
    </flow>

    <http:request-config name="requestConfig">
        <oauth2:authorization-code-authentication config="oauthConfig"/>
    </http:request-config>

    <flow name="testFlow">
        <http:request host="localhost" port="${oauth.server.port}" path="/resource" method="POST"
                      config-ref="requestConfig"/>
    </flow>

    <oauth2:authorization-code-config name="multitenantOauthConfig"
                                clientId="${client.id}"
                                clientSecret="${client.secret}"
                                redirectionUrl="${redirect.url}"
                                oauthStateId="#[message.inboundProperties['http.properties'].queryParams['userId']]">
        <oauth2:custom-token-request
                refreshTokenWhen="#[message.inboundProperties['http.status'] == 500]"
                tokenUrlCallFlow="oauthTokenAcquicitionFlow"
                refreshTokenFlow="oauthRefreshTokenFlowMultitenantOAuthConfig"/>
    </oauth2:authorization-code-config>

    <flow name="oauthRefreshTokenFlowMultitenantOAuthConfig">
        <expression-component>
            payload = ['client_id' : '${client.id}', 'client_secret' : '${client.secret}', 'grant_type' :
            'refresh_token', 'redirect_uri' : '${redirect.url}', 'refresh_token' : oauthState('multitenantOauthConfig',
            flowVars['userId']).refreshToken]
        </expression-component>
        <http:request host="${token.host}" port="${token.port}" path="${token.path}" method="POST"/>
        <json:json-to-object-transformer returnClass="java.lang.Object"/>
        <oauth2:store-authorization-code-state config="multitenantOauthConfig"
                                                oauthStateId="#[flowVars['userId']]"
                                                accessToken="#[payload['access_token']]"
                                                refreshToken="#[payload['refresh_token']]"
                                                expiresIn="#[payload['expires_in']]"/>
    </flow>

    <http:request-config name="multitenantRequestConfig">
        <oauth2:authorization-code-authentication config="multitenantOauthConfig" oauthStateId="#[flowVars['userId']]"/>
    </http:request-config>

    <flow name="testMultitenantFlow">
        <http:request host="localhost" port="${oauth.server.port}" path="/resource" method="POST"
                      config-ref="multitenantRequestConfig"/>
    </flow>

</mule>
